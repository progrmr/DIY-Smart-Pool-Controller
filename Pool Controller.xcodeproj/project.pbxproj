// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 77;
	objects = {

/* Begin PBXAggregateTarget section */
		B22CAAA12E8C5FE800F5B894 /* Pool Controller */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = B22CAAA22E8C5FE800F5B894 /* Build configuration list for PBXAggregateTarget "Pool Controller" */;
			buildPhases = (
				B22CAAA52E8C60AC00F5B894 /* ShellScript */,
			);
			dependencies = (
			);
			name = "Pool Controller";
			packageProductDependencies = (
			);
			productName = "Pool Controller";
		};
/* End PBXAggregateTarget section */

/* Begin PBXFileReference section */
		B27137952E8AB4DC008A976A /* __init__.py */ = {isa = PBXFileReference; lastKnownFileType = text.script.python; path = __init__.py; sourceTree = "<group>"; };
		B27137962E8AB4DC008A976A /* pool_pump_rs485.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = pool_pump_rs485.h; sourceTree = "<group>"; };
		B27137972E8AB4DC008A976A /* pool_pump_rs485.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = pool_pump_rs485.cpp; sourceTree = "<group>"; };
		B27137992E8AB4DC008A976A /* __init__.py */ = {isa = PBXFileReference; lastKnownFileType = text.script.python; path = __init__.py; sourceTree = "<group>"; };
		B271379B2E8AB4DC008A976A /* solar_controller.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = solar_controller.h; sourceTree = "<group>"; };
		B271379C2E8AB4DC008A976A /* solar_controller.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = solar_controller.cpp; sourceTree = "<group>"; };
		B271379E2E8AB4DC008A976A /* __init__.py */ = {isa = PBXFileReference; lastKnownFileType = text.script.python; path = __init__.py; sourceTree = "<group>"; };
		B27137A02E8AB4DC008A976A /* pool_temp_estimator.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = pool_temp_estimator.h; sourceTree = "<group>"; };
		B27137A12E8AB4DC008A976A /* pool_temp_estimator.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = pool_temp_estimator.cpp; sourceTree = "<group>"; };
		B27137A52E8AB4DC008A976A /* valve_actuator.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = valve_actuator.h; sourceTree = "<group>"; };
		B27137A62E8AB4DC008A976A /* valve_actuator.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = valve_actuator.cpp; sourceTree = "<group>"; };
		B27137A82E8AB4DC008A976A /* common_types.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = common_types.h; sourceTree = "<group>"; };
		B27137AB2E8AB4DC008A976A /* esphome-web-9e4fb0.yaml */ = {isa = PBXFileReference; lastKnownFileType = text.yaml; path = "esphome-web-9e4fb0.yaml"; sourceTree = "<group>"; };
		B27137AC2E8AB4DC008A976A /* pool_pump_rs485.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = pool_pump_rs485.h; sourceTree = "<group>"; };
		B27137AD2E8AB4DC008A976A /* solar_controller.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = solar_controller.h; sourceTree = "<group>"; };
		B27137AE2E8AB4DC008A976A /* time_tester.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = time_tester.h; sourceTree = "<group>"; };
		B27137AF2E8AB4DC008A976A /* valve_actuator.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = valve_actuator.h; sourceTree = "<group>"; };
		B27137B12E8ABA45008A976A /* README.txt */ = {isa = PBXFileReference; lastKnownFileType = text; path = README.txt; sourceTree = "<group>"; };
		B27137B42E8AD608008A976A /* pool_controller.yaml */ = {isa = PBXFileReference; lastKnownFileType = text.yaml; path = pool_controller.yaml; sourceTree = "<group>"; };
		B27137B52E8C385F008A976A /* __init__.py */ = {isa = PBXFileReference; lastKnownFileType = text.script.python; path = __init__.py; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXGroup section */
		B27137982E8AB4DC008A976A /* pool_pump_rs485 */ = {
			isa = PBXGroup;
			children = (
				B27137952E8AB4DC008A976A /* __init__.py */,
				B27137962E8AB4DC008A976A /* pool_pump_rs485.h */,
				B27137972E8AB4DC008A976A /* pool_pump_rs485.cpp */,
			);
			path = pool_pump_rs485;
			sourceTree = "<group>";
		};
		B271379D2E8AB4DC008A976A /* solar_controller */ = {
			isa = PBXGroup;
			children = (
				B27137992E8AB4DC008A976A /* __init__.py */,
				B271379B2E8AB4DC008A976A /* solar_controller.h */,
				B271379C2E8AB4DC008A976A /* solar_controller.cpp */,
			);
			path = solar_controller;
			sourceTree = "<group>";
		};
		B27137A22E8AB4DC008A976A /* pool_temp_estimator */ = {
			isa = PBXGroup;
			children = (
				B271379E2E8AB4DC008A976A /* __init__.py */,
				B27137A02E8AB4DC008A976A /* pool_temp_estimator.h */,
				B27137A12E8AB4DC008A976A /* pool_temp_estimator.cpp */,
			);
			path = pool_temp_estimator;
			sourceTree = "<group>";
		};
		B27137A72E8AB4DC008A976A /* valve_actuator */ = {
			isa = PBXGroup;
			children = (
				B27137B52E8C385F008A976A /* __init__.py */,
				B27137A52E8AB4DC008A976A /* valve_actuator.h */,
				B27137A62E8AB4DC008A976A /* valve_actuator.cpp */,
			);
			path = valve_actuator;
			sourceTree = "<group>";
		};
		B27137AA2E8AB4DC008A976A /* components */ = {
			isa = PBXGroup;
			children = (
				B27137B42E8AD608008A976A /* pool_controller.yaml */,
				B27137B12E8ABA45008A976A /* README.txt */,
				B27137A82E8AB4DC008A976A /* common_types.h */,
				B27137982E8AB4DC008A976A /* pool_pump_rs485 */,
				B271379D2E8AB4DC008A976A /* solar_controller */,
				B27137A22E8AB4DC008A976A /* pool_temp_estimator */,
				B27137A72E8AB4DC008A976A /* valve_actuator */,
			);
			path = components;
			sourceTree = "<group>";
		};
		B27137B02E8AB4DC008A976A /* old_custom_components */ = {
			isa = PBXGroup;
			children = (
				B27137AB2E8AB4DC008A976A /* esphome-web-9e4fb0.yaml */,
				B27137AC2E8AB4DC008A976A /* pool_pump_rs485.h */,
				B27137AD2E8AB4DC008A976A /* solar_controller.h */,
				B27137AE2E8AB4DC008A976A /* time_tester.h */,
				B27137AF2E8AB4DC008A976A /* valve_actuator.h */,
			);
			path = old_custom_components;
			sourceTree = "<group>";
		};
		B2A7190F2E8773D8003D3245 = {
			isa = PBXGroup;
			children = (
				B27137B02E8AB4DC008A976A /* old_custom_components */,
				B27137AA2E8AB4DC008A976A /* components */,
			);
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXProject section */
		B2A719102E8773D8003D3245 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = 1;
				LastUpgradeCheck = 1640;
				TargetAttributes = {
					B22CAAA12E8C5FE800F5B894 = {
						CreatedOnToolsVersion = 16.4;
					};
				};
			};
			buildConfigurationList = B2A719132E8773D8003D3245 /* Build configuration list for PBXProject "Pool Controller" */;
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = B2A7190F2E8773D8003D3245;
			minimizedProjectReferenceProxies = 1;
			preferredProjectObjectVersion = 77;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				B22CAAA12E8C5FE800F5B894 /* Pool Controller */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		B22CAAA52E8C60AC00F5B894 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# =============================================================\n# ESPHome File Sync Script for Xcode\n# =============================================================\n\n# ‚ÄºÔ∏è IMPORTANT: Change this to the exact path of your mounted HA esphome folder\nHA_ESPHOME_DIR=\"/Volumes/config/esphome\"\n\n# ‚ÄºÔ∏è IMPORTANT: List the names of your component folders here\nCOMPONENTS=(\"solar_controller\" \"valve_actuator\" \"pool_temp_estimator\" \"pool_pump_rs485\")\n\n\n# --- Script starts here, no more editing needed ---\n\necho \"üöÄ Starting ESPHome file sync...\"\n\n# Verify the destination directory exists\nif [ ! -d \"$HA_ESPHOME_DIR\" ]; then\n  echo \"‚ùå Error: Destination directory not found at $HA_ESPHOME_DIR\"\n  echo \"Please ensure your Home Assistant share is mounted correctly.\"\n  exit 1\nfi\n\n# Use the Xcode environment variable for the project's root directory\nSOURCE_DIR=\"$PROJECT_DIR\"\n\n# 1. Copy the main YAML file\necho \"‚û°Ô∏è Copying main YAML file...\"\ncp -v \"$SOURCE_DIR/components/pool_controller.yaml\" \"$HA_ESPHOME_DIR/\"\n\n# 2. Copy each component\nfor component in \"${COMPONENTS[@]}\"\ndo\n  echo \"‚û°Ô∏è Copying component: $component...\"\n  \n  # Create the destination component directory if it doesn't exist\n  mkdir -p \"$HA_ESPHOME_DIR/components/$component\"\n  \n  # Copy all files from the source component directory to the destination\n  # This will copy the .h, .cpp, and __init__.py files\n  cp -v \"$SOURCE_DIR/components/$component/\"* \"$HA_ESPHOME_DIR/components/$component/\"\ndone\n\necho \"‚úÖ Sync complete! Files are ready on your Home Assistant machine.\"\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin XCBuildConfiguration section */
		B22CAAA32E8C5FE800F5B894 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = G69KC2U64D;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		B22CAAA42E8C5FE800F5B894 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = G69KC2U64D;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
		B2A719142E8773D8003D3245 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		B2A719152E8773D8003D3245 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		B22CAAA22E8C5FE800F5B894 /* Build configuration list for PBXAggregateTarget "Pool Controller" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B22CAAA32E8C5FE800F5B894 /* Debug */,
				B22CAAA42E8C5FE800F5B894 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		B2A719132E8773D8003D3245 /* Build configuration list for PBXProject "Pool Controller" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B2A719142E8773D8003D3245 /* Debug */,
				B2A719152E8773D8003D3245 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = B2A719102E8773D8003D3245 /* Project object */;
}
